@mixin waitAnimate($options: ()) {

    $options: map-merge((
      animationName: waitAnimate,
      duration: 1,
      waitTime: 0,
      timingFunction: linear,
      iterationCount: infinite
    ), $options);
  
    $name: map-get($options, animationName);
    $kf: map-get($options, keyframes);
    $kfLength: length($kf);
    $duration: map-get($options, duration);
    $waitTime: map-get($options, waitTime);
    $timingFunction: map-get($options, timingFunction);
    $iterationCount: map-get($options, iterationCount);
    $counter: 1; // index of 'each'
  
    @keyframes #{$name} {
      @each $frame, $prop in $kf {
        #{$frame * $duration / ($duration + $waitTime)}% {
          @each $k, $v in $prop {
            #{$k}: #{$v}
          }
        }
        // if last in loop and waitTime is not 0, add the last frame as 100% (this is what creates the pause)
        @if $counter == $kfLength and $waitTime > 0 {
          100% {
            @each $k, $v in $prop {
              #{$k}: #{$v}
            }
          }
        }
        $counter: $counter+1;
      }
    }
  
    .#{$name} {
      animation: #{$name} #{$duration + $waitTime}s #{$timingFunction} #{$iterationCount};
    }
  
  }
  @include waitAnimate(
    (
      animationName: change1,
      keyframes: (
        0: (
            transform: translateY(-20px),
            opacity: 0
        ),
        10: (
            transform: translateY(0px),
            opacity: 1
        ),
        40: (
            transform: translateY(0px);
            opacity: 1;
        ),
        50: (
            transform: translateY(0px),
            opacity: 1
        ),
        100: (
            opacity: 0
        )
      ),
      duration: 4,
      waitTime: 1,
      timingFunction: ease,
      iterationCount: infinite
    )
  );